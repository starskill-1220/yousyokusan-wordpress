@use "../foundation/color" as c;
@use "../foundation/mixin" as *;
@use "../foundation/fonts" as f;


#page-goods {
  .l-goods__list {
    grid-template-columns: repeat(auto-fill, minmax(responsiveValue(250px,150px), 1fr));
    gap: responsiveValue(30px,15px) responsiveValue(20px,15px);
    margin-bottom: responsiveValue(20px,20px);
  }
}

.l-goods__list {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(responsiveValue(300px,150px), 1fr));
  gap: responsiveValue(50px,15px) responsiveValue(30px,15px);
  justify-content: center;
  margin-bottom: responsiveValue(50px,30px);
  .l-goods__item {
    width: 100%;
    display: flex;
    flex-direction: column;
    position: relative;
    filter: drop-shadow(0px 0px 5px rgba(0, 0, 0, 0.1));
    transition: 0.3s;
    // &:hover {
    //   transform: scale(1.02);
    //   transition: 0.3s;
    // }
    a {
      width: 100%!important;

    }
    .l-goods__item-img {
      position: relative;
      overflow: hidden;
      display: flex;
      justify-content: center;
      border-radius: 15px;
      @include mq(sp) {
        border-radius: 10px;
      }
      overflow: hidden;
      z-index: 1;
      &::after {
        content: "";
        padding-top: 70%;
        display: block;
      }
      img {
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
    .l-goods__item-text-box {
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: flex-end;
      padding: responsiveValue(30px,23px) responsiveValue(20px,12px) responsiveValue(10px,10px) responsiveValue(20px,12px);
      border-radius: 0 0 responsiveValue(15px,10px) responsiveValue(15px,10px);
      background-color: c.$white-color;
      transform: translateY(-15px);
      outline: 1px solid #e6e6e6;
      outline-offset: -8px;
      @include mq(sp) {
      outline-offset: -5px;
      }
      z-index: -1;
      h3 {
        height: fit-content;
        min-height: 45px;
        @include mq(sp) {
          min-height: auto;
        }
        font-size: responsiveValue(1.6rem,1.4rem);
        line-height: responsiveValue(2.5rem,2.2rem);
        letter-spacing: 0px;
        margin-bottom: responsiveValue(15px,10px);
      }
      .l-goods__item-price {
        font-size: responsiveValue(2.6rem,2.4rem);
        margin-bottom: 10px;
        letter-spacing: 0px;
        &::before {
          content: "¥";
          font-size: 16px;
          margin-right: responsiveValue(5px,0px);
        }
        &::after {
          content: "(税込)";
          font-size: 14px;
          margin-left: responsiveValue(5px,4px);
        }
      }
      .l-goods__item-desc {
        font-size: responsiveValue(1.4rem,1.2rem);
        line-height: responsiveValue(2.5rem,2.0rem);
        margin-bottom: responsiveValue(20px,10px);
        letter-spacing: 0px;
      }
    }
    .c-btn {
      width: 100%;
      display: inline-block;
      text-align: right;
      margin: 0;
      margin-bottom: responsiveValue(2px,2px);
      border-bottom: none;
      @include mq(sp) {
        font-size: 1.2rem;
        padding-bottom: 3px;
      }
    }
  }
}

.p-page-goods__pagination {
  text-align: center;
  display: flex;
  justify-content: center;
  gap: 10px;
  .page-numbers {
    display: flex;
    justify-content: center;
    align-items: center;
    width: responsiveValue(30px,20px);
    height: responsiveValue(30px,20px);
    font-size: responsiveValue(1.6rem,1.4rem);
    line-height: responsiveValue(1.6rem,1.4rem);
    border: 1px solid c.$text-color;
    border-radius: 5px;
  }
  .current {
    background-color: #000;
    color: #fff;
  }
  .next, .prev {
    width: fit-content;
    border: none;
  }
}